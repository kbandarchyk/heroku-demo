version: '3.2'

services:
    postgres:
        build: ./postgres
        hostname: postgres   
        volumes:
            - db-data:/var/lib/postgresql/data
        ports:
            - 5432:5432
        networks:
            - heroku-demo
        healthcheck:
           test: ["CMD-SHELL", "pg_isready -U postgres"]
           interval: 10s
           timeout: 5s
           retries: 5

    heroku-web:
         build: ./heroku-web
         ports: 
            - 8080:8080
         hostname: heroku-web
         environment:
           - DATABASE_URL=${DATABASE_URL}
           - BUCKETEER_BUCKET_NAME=${BUCKETEER_BUCKET_NAME}
           - BUCKETEER_AWS_REGION=${BUCKETEER_AWS_REGION}
           - BUCKETEER_AWS_ACCESS_KEY_ID=${BUCKETEER_AWS_ACCESS_KEY_ID}
           - BUCKETEER_AWS_SECRET_ACCESS_KEY=${BUCKETEER_AWS_SECRET_ACCESS_KEY}
         depends_on:
            - postgres
         networks:
            - heroku-demo

    heroku-worker:
         build: ./heroku-worker
         ports: 
            - 8082:8082
         hostname: heroku-worker
         environment:
           - DATABASE_URL=postgres://heroku_demo_admin:123a456B@postgres:5432/heroku_demo_db
         depends_on:
            - postgres
         networks:
            - heroku-demo
            
volumes:
  db-data:
    driver: local
    
networks:
  heroku-demo:
    driver: bridge    